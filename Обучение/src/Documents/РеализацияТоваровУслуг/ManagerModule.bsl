
Процедура Накладная(ТабДок, Ссылка, НастройкаПодписи) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Накладная)
	Макет = Документы.РеализацияТоваровУслуг.ПолучитьМакет("Накладная");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.СуммаДокумента,
	|	РеализацияТоваровУслуг.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.Заполнить(НастройкаПодписи);
		
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	
	ВидОперации = Неопределено;
	
	Если Параметры.Свойство("Ключ") Тогда
		ВидОперации = Параметры.Ключ.ВидОперации;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) и Параметры.Свойство("ЗначениеКопирования") Тогда
		ВидОперации =  Параметры.ЗначениеКопирования.ВидОперации;	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) и Параметры.Свойство("ЗначенияЗаполнения")
		и ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") и Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
		ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) и Параметры.Свойство("Основание") Тогда
		
		Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			
			Если Параметры.Основание.Товары.Количество()>0 и Параметры.Основание.Услуги.Количество()=0 Тогда
				ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Товары;
			ИначеЕсли Параметры.Основание.Товары.Количество()=0 и Параметры.Основание.Услуги.Количество()>0 Тогда
				ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Услуги;
			Иначе
				ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ТоварыИУслуги;
			КонецЕсли;
		
		КонецЕсли;		
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		//ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ТоварыИУслуги;
		ВыбраннаяФорма = "ФормаВыбораВидаОперации";
		Возврат;
	КонецЕсли;
	
	СоотвествиеФормИВидовОпераций = ПолучитьСоотвествиеФормИВидовОпераций();
	ВыбраннаяФорма = СоотвествиеФормИВидовОпераций[ВидОперации];	
	
КонецПроцедуры

Функция ПолучитьСоотвествиеФормИВидовОпераций() Экспорт

	СоотвествиеФормИВидовОпераций = Новый Соответствие;
	СоотвествиеФормИВидовОпераций.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.Товары, "ФормаДокументаУправляемаяТовары");
	СоотвествиеФормИВидовОпераций.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.Услуги, "ФормаДокументаУправляемаяУслуги");
	СоотвествиеФормИВидовОпераций.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.ТоварыИУслуги, "ФормаДокументаУправляемаяТоварыИУслуги");
	
	Возврат СоотвествиеФормИВидовОпераций;

КонецФункции // ПолучитьСоотвествиеФормИВидовОпераций()



















