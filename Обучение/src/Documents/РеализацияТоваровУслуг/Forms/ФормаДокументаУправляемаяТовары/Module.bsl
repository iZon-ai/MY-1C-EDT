
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьЗначениеПараметровФО();	
	
	Если Параметры.Свойство("ИзменитьВидОперации") Тогда
		Объект.ВидОперации = Параметры.ИзменитьВидОперации;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПараметровФО()

	ПараметрыФО = Новый Структура;
	ПараметрыФО.Вставить("Контрагент", Объект.Контрагент);
	ПараметрыФО.Вставить("Организация", Объект.Организация);
	ПараметрыФО.Вставить("Период", Объект.Дата);
	
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);

КонецПроцедуры // ()

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

//&НаКлиенте
//Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = Ложь;
//	
//	Отбор = Новый Структура;
//	Отбор.Вставить("ВидНоменклатуры",  ПодготовитьМассивВидовНоменклатуры());
//	
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("Отбор", Отбор);
//	
//	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы,  Элемент);
//	
//КонецПроцедуры

&НаСервере
Функция ПодготовитьМассивВидовНоменклатуры()

	МассивВидовНоменклатуры = Новый Массив;
	МассивВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Товар);
	МассивВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Материал);
	
	Если ПолучитьФункциональнуюОпциюФормы("ВыпускПродукции") Тогда
		
		МассивВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Продукция);		
	
	КонецЕсли;	
	
	Возврат МассивВидовНоменклатуры;

КонецФункции // ()

&НаКлиенте
Процедура ДобавитьРеализацию(Команда)
	
	ДанныеЗаполнения = Новый Структура("Организация, Контрагент, Договор, Менеджер, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Объект);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТовары(Команда)
	
	Если Объект.Товары.Количество()>0 Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьТоварыЗавершение", ЭтотОбъект), "Подтвердите очистку табличной части ""Товары"". Очистить?",РежимДиалогаВопрос.ДаНет);		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТоварыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Объект.Товары.Очистить();
		ПоказатьПредупреждение(Неопределено, "Очистка успешно завершена!");			
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.Склад) и Не ПараметрыЗаписи.Свойство("НеПроверятьСклад") Тогда
	
		ОсновнойСклад = ПолучитьОсновнойСклад();
		Если ЗначениеЗаполнено(ОсновнойСклад) Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ОсновнойСклад", ОсновнойСклад);
			ДополнительныеПараметры.Вставить("ПараметрыЗаписи", ПараметрыЗаписи);
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, ДополнительныеПараметры),
						   "Поле ""Склад"" не заполнено. Заполнить поле значением основного склада?",
						   РежимДиалогаВопрос.ДаНетОтмена);
			Отказ = Истина;						   
		
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Склад = ДополнительныеПараметры.ОсновнойСклад;	
	КонецЕсли;	
	
	ДополнительныеПараметры.ПараметрыЗаписи.Вставить("НеПроверятьСклад");
	
	Записать(ДополнительныеПараметры.ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнойСклад()

	Возврат ХранилищеОбщихНастроек.Загрузить("ОсновнойСклад");	

КонецФункции // ПолучитьОсновнойСклад()

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение"));
	ПараметрыЗаписи.Вставить("ЗакрытьФорму");
	
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("ЗакрытьФорму") Тогда
		
		Закрыть();		
	
	КонецЕсли;
	
КонецПроцедуры






