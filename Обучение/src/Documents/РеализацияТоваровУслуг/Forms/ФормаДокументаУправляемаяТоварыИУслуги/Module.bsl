
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьЗначениеПараметровФО();	
	
	Если Параметры.Свойство("ИзменитьВидОперации") Тогда
		Объект.ВидОперации = Параметры.ИзменитьВидОперации;
		Модифицированность = Истина;
	КонецЕсли;
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПараметровФО()

	ПараметрыФО = Новый Структура;
	ПараметрыФО.Вставить("Контрагент", Объект.Контрагент);
	ПараметрыФО.Вставить("Организация", Объект.Организация);
	ПараметрыФО.Вставить("Период", Объект.Дата);
	
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);

КонецПроцедуры // ()

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

//&НаКлиенте
//Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = Ложь;
//	
//	Отбор = Новый Структура;
//	Отбор.Вставить("ВидНоменклатуры",  ПодготовитьМассивВидовНоменклатуры());
//	
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("Отбор", Отбор);
//	
//	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы,  Элемент);
//	
//КонецПроцедуры

&НаСервере
Функция ПодготовитьМассивВидовНоменклатуры()

	МассивВидовНоменклатуры = Новый Массив;
	МассивВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Товар);
	МассивВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Материал);
	
	Если ПолучитьФункциональнуюОпциюФормы("ВыпускПродукции") Тогда
		
		МассивВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Продукция);		
	
	КонецЕсли;	
	
	Возврат МассивВидовНоменклатуры;

КонецФункции // ()

&НаКлиенте
Процедура ДобавитьРеализацию(Команда)
	
	ДанныеЗаполнения = Новый Структура("Организация, Контрагент, Договор, Менеджер, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Объект);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТовары(Команда)
	
	Если Объект.Товары.Количество()>0 Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьТоварыЗавершение", ЭтотОбъект), "Подтвердите очистку табличной части ""Товары"". Очистить?",РежимДиалогаВопрос.ДаНет);		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТоварыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Объект.Товары.Очистить();
		ПоказатьПредупреждение(Неопределено, "Очистка успешно завершена!");			
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.Склад) и Не ПараметрыЗаписи.Свойство("НеПроверятьСклад") Тогда
	
		ОсновнойСклад = ПолучитьОсновнойСклад();
		Если ЗначениеЗаполнено(ОсновнойСклад) Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ОсновнойСклад", ОсновнойСклад);
			ДополнительныеПараметры.Вставить("ПараметрыЗаписи", ПараметрыЗаписи);
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, ДополнительныеПараметры),
						   "Поле ""Склад"" не заполнено. Заполнить поле значением основного склада?",
						   РежимДиалогаВопрос.ДаНетОтмена);
			Отказ = Истина;						   
		
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Склад = ДополнительныеПараметры.ОсновнойСклад;	
	КонецЕсли;	
	
	ДополнительныеПараметры.ПараметрыЗаписи.Вставить("НеПроверятьСклад");
	
	Записать(ДополнительныеПараметры.ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнойСклад()

	Возврат ХранилищеОбщихНастроек.Загрузить("ОсновнойСклад");	

КонецФункции // ПолучитьОсновнойСклад()

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение"));
	ПараметрыЗаписи.Вставить("ЗакрытьФорму");
	
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("ЗакрытьФорму") Тогда
		
		Закрыть();		
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", Новый Структура("Дата, ТипЦен", Объект.Дата, Объект.ТипЦен));
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий);
	
	//ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	//ДанныеСтрокиТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма");
	//ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	//
	//ДанныеОбъекта = Новый Структура("Дата, ТипЦен");
	//ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	//
	//ТоварыНоменклатураПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	//ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СтрокаТабличнойЧасти, ДанныеОбъекта)

	СтрокаТабличнойЧасти.Цена = ОбщегоНазначенияСервер.ПолучитьЦенуНоменклатуры(ДанныеОбъекта.Дата,
																				ДанныеОбъекта.ТипЦен,
																				СтрокаТабличнойЧасти.Номенклатура);
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);

КонецПроцедуры // ТоварыНоменклатураПриИзмененииНаСервере()

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий);
	
	//ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	//ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий);
	
	//ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	//ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьЦенуПоСумме");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий);
	
	//ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	//ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)

	Форма.Объект.СуммаДокумента = Форма.Объект.Товары.Итог("Сумма") + Форма.Объект.Услуги.Итог("Сумма");

КонецПроцедуры // ОбновитьИтоги()

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока и ОтменаРедактирования Тогда
	
		ОбновитьИтоги(ЭтаФорма);		
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСчетамНаОплату(Команда)
	
	Если Объект.Товары.Количество()>0 или Объект.Услуги.Количество()>0 Тогда
	
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоСчетамНаОплатуЗавершение", ЭтотОбъект),
					   "Перед заполнением данные в табличных частях будут очищены. Продолжить заполнение?",
					   РежимДиалогаВопрос.ДаНет);
					   
	Иначе					   
		
		ОткрытьФормуЗаполнения();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСчетамНаОплатуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Товары.Очистить();
		Объект.Услуги.Очистить();
		ОткрытьФормуЗаполнения();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЗаполнения()

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Контрагент", Объект.Контрагент);
	
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма.ФормаЗаполненияСКД", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // ОткрытьФормуЗаполнения()

&НаКлиенте
Процедура ДобавитьПоСчетамНаОплату(Команда)

	ОткрытьФормуЗаполнения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
		и ВыбранноеЗначение.Свойство("АдресДанныхДляЗаполнения") Тогда
		
		 ЗаполнитьИзДанныхДляЗаполненияНаСервере(ВыбранноеЗначение.АдресДанныхДляЗаполнения);		
		 
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДанныеФормыКоллекция") Тогда
		 
		Для каждого Стр Из ВыбранноеЗначение Цикл
		
			Если Стр.ВидНоменклатуры = ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Услуга") Тогда
				НовСтр = Объект.Услуги.Добавить();				
			Иначе
				НовСтр = Объект.Товары.Добавить();			
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		
		КонецЦикла; 
		
		ОбновитьИтоги(ЭтаФорма);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
		и ВыбранноеЗначение.Свойство("АдресПодобранныхДанныхВХранилище") Тогда
		
		ЗагрузитьПодобранныеДанныеНаСервере(ВыбранноеЗначение.АдресПодобранныхДанныхВХранилище);
		 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПодобранныеДанныеНаСервере(АдресВХранилище)

	ТаблицаЗначений = ПолучитьИзВременногоХранилища(АдресВХранилище);
	Для каждого Стр Из ТаблицаЗначений Цикл
	
		Если Стр.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
			НовСтр = Объект.Услуги.Добавить();
		Иначе
			НовСтр = Объект.Товары.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		
	КонецЦикла;
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры // ЗагрузитьПодобранныеДанныеНаСервере()













&НаСервере
Процедура ЗаполнитьИзДанныхДляЗаполненияНаСервере(АдресДанных)

	ТаблицаЗначений = ПолучитьИзВременногоХранилища(АдресДанных);
	
	Для каждого Стр Из ТаблицаЗначений Цикл
	
		НовСтр = Объект[Стр.ИмяТабличнойЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	
	КонецЦикла;
	
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры // ЗаполнитьИзДанныхДляЗаполненияНаСервере()

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипЦен", Объект.ТипЦен);
	ПараметрыФормы.Вставить("Документ", Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ПодборНоменклатурыУпр.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры
























