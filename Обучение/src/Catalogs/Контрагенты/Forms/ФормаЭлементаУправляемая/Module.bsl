&НаКлиенте
Перем ДанныеДляСообщения;

&НаКлиенте
Процедура Команда1(Команда)
	Команда1НаСервере();
КонецПроцедуры

&НаСервере
Процедура Команда1НаСервере()
	
	СправчникОбъект = РеквизитФормыВЗначение("Объект");
	СправчникОбъект.ФорматироватьНаименование();
	ЗначениеВРеквизитФормы(СправчникОбъект,"Объект");
	
	СправчникОбъект = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.Контрагенты"));
	СправчникОбъект.ФорматироватьНаименование();
	ЗначениеВДанныеФормы(СправчникОбъект,Объект);
	
КонецПроцедуры

//&НаКлиенте
//Процедура УстановитьВидимостьПолей()
//	
//	Если Объект.ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
//		Элементы.ДокументУдостоверяющийЛичность.Видимость = Ложь;
//		Элементы.КПП.Видимость = Истина;
//		Элементы.ОГРН.Видимость = Истина;
//	Иначе
//		Элементы.ДокументУдостоверяющийЛичность.Видимость = Истина;
//		Элементы.КПП.Видимость = Ложь;
//		Элементы.ОГРН.Видимость = Ложь;
//	КонецЕсли;     
//	
//КонецПроцедуры // ()

&НаКлиенте
Процедура ЮридическоеФизическоеЛицоПриИзменении(Элемент)
	УстановитьВидимостьПолей();
КонецПроцедуры

//&НаКлиенте
//Процедура ПриОткрытии(Отказ)
//	УстановитьВидимостьПолей();
//КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолей()
	
	Если Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		Элементы.ДокументУдостоверяющийЛичность.Видимость = Ложь;
		Элементы.КПП.Видимость = Истина;
		Элементы.ОГРН.Видимость = Истина;
	Иначе
		Элементы.ДокументУдостоверяющийЛичность.Видимость = Истина;
		Элементы.КПП.Видимость = Ложь;
		Элементы.ОГРН.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры // ()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимостьПолей();
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПараметровФО()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыКонтекстныхФункциональныхОпций.Ссылка
		|ИЗ
		|	Справочник.ПараметрыКонтекстныхФункциональныхОпций КАК ПараметрыКонтекстныхФункциональныхОпций
		|ГДЕ
		|	ПараметрыКонтекстныхФункциональныхОпций.ВестиУчетПоДоговорам = &ВестиУчетПоДоговорам";
	
	Запрос.УстановитьПараметр("ВестиУчетПоДоговорам", Объект.ВестиУчетПоДоговорам);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		НастройкаФормы = ВыборкаДетальныеЗаписи.Ссылка;
		
	Иначе
		
		НоваяНастройкаФормы = Справочники.ПараметрыКонтекстныхФункциональныхОпций.СоздатьЭлемент();
		НоваяНастройкаФормы.ВестиУчетПоДоговорам = Объект.ВестиУчетПоДоговорам;
		НоваяНастройкаФормы.Записать();
		
		НастройкаФормы = НоваяНастройкаФормы.Ссылка;		
	
	КонецЕсли;	
	
	ПараметрыФункциональныхОпций = Новый Структура;
	ПараметрыФункциональныхОпций.Вставить("НастройкаФормы", НастройкаФормы);
	
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФункциональныхОпций);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоДоговорамПриИзменении(Элемент)
	
	УстановитьЗначениеПараметровФО();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ВестиУчетПоДоговорам и Не ЗначениеЗаполнено(Объект.ОсновнойДоговор) Тогда
		
		НовыйДоговор = Справочники.Договоры.СоздатьЭлемент();
		НовыйДоговор.Владелец = Объект.Ссылка;
		НовыйДоговор.Наименование = "Основной договор";
		НовыйДоговор.Записать();
		
		ИсторияРаботыПользователя.Добавить(НовыйДоговор.Ссылка);
		
		ТекущийОбъект.ОсновнойДоговор = НовыйДоговор.Ссылка;
		ТекущийОбъект.Записать();
		
		ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
		
		ФорматированныйТекст = Новый ФорматированнаяСтрока("В справочнике ""Договоры"" создан """,
														   Новый ФорматированнаяСтрока("Основной договор",,,,
														         ПолучитьНавигационнуюСсылку(НовыйДоговор.Ссылка)),
														   """");
		
		ПараметрыСообщения = Новый Структура;
		ПараметрыСообщения.Вставить("Заголовок", "Создание ...");
		ПараметрыСообщения.Вставить("Текст", "В справочнике ""Договоры"" создан ""Основной договор""");
		ПараметрыСообщения.Вставить("ФорматированныйТекст", ФорматированныйТекст);
		ПараметрыСообщения.Вставить("Ссылка", НовыйДоговор.Ссылка);
		ПараметрыСообщения.Вставить("Картинка", БиблиотекаКартинок.Справочник);
		
		ПараметрыЗаписи.Вставить("Сообщение", ПараметрыСообщения);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("Сообщение") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТекстЗаголовок", ПараметрыЗаписи.Сообщение.Заголовок);
		ПараметрыФормы.Вставить("ТекстСообщения", ПараметрыЗаписи.Сообщение.Текст);
		ПараметрыФормы.Вставить("ТекстГиперссылки", Строка(ПараметрыЗаписи.Сообщение.ссылка));
		ПараметрыФормы.Вставить("СсылкаГиперссылки", ПолучитьНавигационнуюСсылку(ПараметрыЗаписи.Сообщение.Ссылка));
		
		ОткрытьФорму("ОбщаяФорма.ФормаСообщения", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОповещение()

	ПоказатьОповещениеПользователя(ДанныеДляСообщения.Заголовок,
								   ПолучитьНавигационнуюСсылку(ДанныеДляСообщения.Ссылка),
								   ДанныеДляСообщения.Текст,
								   ДанныеДляСообщения.Картинка);
	
КонецПроцедуры // ПоказатьОповещение()

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	КорректнаяДлинаИНН = 10;
	Если Объект.ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
	
		КорректнаяДлинаИНН = 12;	
	
	КонецЕсли;
	
	Если СтрДлина(Объект.ИНН)<>КорректнаяДлинаИНН Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Длина ИНН должна быть "+КорректнаяДлинаИНН+" символов!";
		Сообщение.Поле = "Объект.ИНН";
		Сообщение.Сообщить();		
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСообщение(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.ОсновнойДоговор);
	
	Форма = ОткрытьФорму("Справочник.Договоры.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Текст сообщения";
	Сообщение.ИдентификаторНазначения = Форма.УникальныйИдентификатор;
	Сообщение.Поле = "Объект.Наименование";
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКонтрагента(Команда)
	СохранитьКонтрагентаНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьКонтрагентаНаСервере()
	
	СправочникОбъект = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.Контрагенты"));
	УстановитьСоответствиеОбъектаИРеквизитаФормы(СправочникОбъект, "Объект");
	СправочникОбъект.Записать();
	ЗначениеВДанныеФормы(СправочникОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОсновнойДоговор() Экспорт

	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	СправочникОбъект.Записать();
	ЗначениеВРеквизитФормы(СправочникОбъект,"Объект");	

КонецПроцедуры // ЗаписатьОсновнойДоговор()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОсновнойДоговор" и Источник = Объект.Ссылка Тогда
		
		Объект.ОсновнойДоговор = Параметр;
		Если Не Модифицированность Тогда
			ЗаписатьОсновнойДоговор();
		КонецЕсли;
		
		Оповестить("УстановленОсновнойДоговор", Параметр);
		
	КонецЕсли;
	
КонецПроцедуры












